/*****************************************************************************
 * Copyright (C) 2013-2014 Ming Hu tewilove<at>gmail.com
 *
 * This file is part of RootSDK.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation; either version 2.1 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin Street, Fifth Floor, Boston MA 02110-1301, USA.
 *****************************************************************************/


#ifndef _EXPLOIT_H_
#define _EXPLOIT_H_

#ifdef __cplusplus
extern "C" {
#endif

// the exploit is capable to modify RO segment
#define EXPLOIT_POKE_TEXT 1
// the exploit writes more than we want, so even it's capable to modify RO segment, it's not safe
#define EXPLOIT_POKE_WITH_GARBAGE 2
// the exploit cannot mmap kernel in a /dev/mem way
#define EXPLOIT_MMAP_ABNORMAL 4

struct st_exploit {
    const char *name;
    int flags;
    int (*invoke)(void *, long addr);
    // maps kernel memory, addr is PA
    void *(*mmap)(void *, long addr, long size);
    // read/write virtual memory
    int (*read32)(void *, long addr, long *val);
    int (*write32)(void *, long addr, long val);
    void *opaque;
    int (*init)(void **);
    void (*free)(void **);
};

typedef struct st_exploit exploit_t;

void exploit_init(exploit_t **);
void exploit_free(exploit_t **);
int exploit_generic_mmap(int fd, long addr, long size, void **mmaped);

#ifdef __cplusplus
}
#endif

#endif

